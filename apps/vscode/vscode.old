title: /.* - Visual Studio Code$/
-
tag(): user.tabs
# tag(): user.ide
# tag(): user.line_commands
# tag(): splits
# tag(): snippets

commander [<user.text>]:
    user.vscode("workbench.action.showCommands")
    insert(text)
go to [<user.text>]:
    user.vscode("workbench.action.quickOpen")
    insert(text)
go last:
    user.vscode("workbench.action.navigateBack")
go next:
    user.vscode("workbench.action.navigateForward")
line <number>:
    user.vscode("workbench.action.gotoLine")
    insert(number)
    key(enter)

# Sidebar
bar switch:
    user.vscode("workbench.action.toggleSidebarVisibility")
bar explore:
    user.vscode("workbench.view.explorer")
bar source:
    user.vscode("workbench.view.scm")
bar extensions:
    user.vscode("workbench.view.extensions")
bar search:
    user.vscode("workbench.view.search")
bar run:
    user.vscode("workbench.view.debug")
bar outline:
    user.vscode("outline.focus")

# Panels
panel switch:
    user.vscode("workbench.action.togglePanel")
panel control:
    user.vscode("workbench.panel.repl.view.focus")
panel output:
    user.vscode("workbench.panel.output.focus")
panel problems:
    user.vscode("workbench.panel.markers.view.focus")
panel terminal:
    user.vscode("workbench.panel.terminal.focus")

# Settings
show settings:
    user.vscode("workbench.action.openGlobalSettings")
show shortcuts:
    user.vscode("workbench.action.openGlobalKeybindings")
show snippets:
    user.vscode("workbench.action.openSnippets")

# Display
fullscreen switch:
    user.vscode("workbench.action.toggleFullScreen")
zen switch:
    user.vscode("workbench.action.toggleZenMode")
centered switch:
    user.vscode("workbench.action.toggleCenteredLayout")
theme switch:
    user.vscode("workbench.action.selectTheme")
wrap switch:
    user.vscode("editor.action.toggleWordWrap")

# File and Folder
file open:
    user.vscode("workbench.action.files.openFile")
folder open:
    user.vscode("workbench.action.files.openFolder")
file new:
    user.vscode("workbench.action.files.newUntitledFile")
file window:
    user.vscode("workbench.action.files.showOpenedFileInNewWindow")
save as:
    user.vscode("workbench.action.files.saveAs")
save all:
    user.vscode("workbench.action.files.saveAll")
save ugly:
    user.vscode("workbench.action.files.saveWithoutFormatting")
save closed:
    user.vscode("workbench.action.closeUnmodifiedEditors")
file copy:
    user.vscode("copyFilePath")
explore that:
    user.vscode("workbench.action.files.revealActiveFileInWindows")

# Window and Editor
window new:
    user.vscode("workbench.action.newWindow")
window close:
    user.vscode("workbench.action.closeWindow")
editor close:
    user.vscode("workbench.action.closeActiveEditor")
editor restore:
    user.vscode("workbench.action.reopenClosedEditor")
editor switch:
    user.vscode("workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup")
editor pin:
    user.vscode("workbench.action.pinEditor")
editor unpin:
    user.vscode("workbench.action.unpinEditor")
markdown preview:
    user.vscode("markdown.showPreview")
markdown preview side:
    user.vscode("markdown.showPreviewToSide")

# Groups
split side:
    user.vscode("workbench.action.splitEditor")
split down:
    user.vscode("workbench.action.splitEditorOrthogonal")
split rotate:
    user.vscode("workbench.action.toggleEditorGroupLayout")
group up:
    user.vscode("workbench.action.focusAboveGroup")
group down:
    user.vscode("workbench.action.focusBelowGroup")
group left:
    user.vscode("workbench.action.focusLeftGroup")
group right:
    user.vscode("workbench.action.focusRightGroup")
send up:
    user.vscode("workbench.action.moveEditorToAboveGroup")
send down:
    user.vscode("workbench.action.moveEditorToBelowGroup")
send left:
    user.vscode("workbench.action.moveEditorToLeftGroup")
send right:
    user.vscode("workbench.action.moveEditorToRightGroup")
group size:
    user.vscode("workbench.action.toggleEditorWidths")
group merge:
    user.vscode("workbench.action.editorLayoutSingle")
group close:
    user.vscode("workbench.action.closeEditorsInGroup")
group close all:
    user.vscode("workbench.action.closeAllGroups")

# Find and Search
find that:
    user.vscode("editor.action.nextSelectionMatchFindAction")
find last:
    user.vscode("editor.action.previousMatchFindAction")
find and replace:
    user.vscode("editor.action.startFindReplaceAction")
search:
    user.vscode("workbench.action.findInFiles")
search and replace:
    user.vscode("workbench.action.replaceInFiles")
take selection:
    user.vscode("editor.action.selectAllMatches")
find case:
    user.vscode("toggleFindCaseSensitive")
find regex:
    user.vscode("toggleFindRegex")
find word:
    user.vscode("toggleFindWholeWord")
find selection:
    user.vscode("toggleFindInSelection")

# Language Features
suggest show:
    user.vscode("editor.action.triggerSuggest")
hint show:
    user.vscode("editor.action.triggerParameterHints")
definition show:
    user.vscode("editor.action.revealDefinition")
definition peek:
    user.vscode("editor.action.peekDefinition")
definition side:
    user.vscode("editor.action.revealDefinitionAside")
references show:
    user.vscode("editor.action.goToReferences")
references find:
    user.vscode("references-view.find")
format that:
    user.vscode("editor.action.formatDocument")
format selection:
    user.vscode("editor.action.formatSelection")
problem next:
    user.vscode("editor.action.marker.nextInFiles")
problem last:
    user.vscode("editor.action.marker.prevInFiles")
problem fix:
    user.vscode("problems.action.showQuickFixes")
rename that:
    user.vscode("editor.action.rename")
refactor that:
    user.vscode("editor.action.refactor")
whitespace trim:
    user.vscode("editor.action.trimTrailingWhitespace")
language switch:
    user.vscode("workbench.action.editor.changeLanguageMode")
comment line:
    user.vscode("editor.action.commentLine")
comment block:
    user.vscode("editor.action.blockComment")

# Emmet
emmet out:
    user.vscode("editor.emmet.action.balanceOut")
emmet in:
    user.vscode("editor.emmet.action.balanceIn")
emmet expand:
    user.vscode("editor.emmet.action.expandAbbreviation")
emmet match:
    user.vscode("editor.emmet.action.matchTag")
emmet next:
    user.vscode("editor.emmet.action.nextEditPoint")
emmet last:
    user.vscode("editor.emmet.action.prevEditPoint")
emmet remove:
    user.vscode("editor.emmet.action.removeTag")
emmet (split|join):
    user.vscode("editor.emmet.action.splitJoinTag")
emmet update:
    user.vscode("editor.emmet.action.updateTag")
emmet wrap:
    user.vscode("editor.emmet.action.wrapWithAbbreviation")
emmet wrap lines:
    user.vscode("editor.emmet.action.wrapIndividualLinesWithAbbreviation")
emmet evaluate:
    user.vscode("editor.emmet.action.evaluateMathExpression")
emmet increment:
    user.vscode("editor.emmet.action.incrementNumberByOne")
emmet increment big:
    user.vscode("editor.emmet.action.incrementNumberByTen")
emmet increment small:
    user.vscode("editor.emmet.action.incrementNumberByOneTenth")
emmet decrement:
    user.vscode("editor.emmet.action.decrementNumberByOne")
emmet decrement big:
    user.vscode("editor.emmet.action.decrementNumberByTen")
emmet decrement small:
    user.vscode("editor.emmet.action.decrementNumberByOneTenth")
emmet show:
    user.vscode("workbench.action.showEmmetCommands")

# Cursors
cursor undo:
    user.vscode("cursorUndo")
cursor redo:
    user.vscode("cursorRedo")
cursor up:
    user.vscode("editor.action.insertCursorAbove")
cursor down:
    user.vscode("editor.action.insertCursorBelow")
cursor lines:
    user.vscode("editor.action.insertCursorAtEndOfEachLineSelected")

# Debugging
break point:
    user.vscode("editor.debug.action.toggleBreakpoint")
step over:
    user.vscode("workbench.action.debug.stepOver")
debug step into:
    user.vscode("workbench.action.debug.stepInto")
debug step out [of]:
    user.vscode("workbench.action.debug.stepOut")
debug start:
    user.vscode("workbench.action.debug.start")
debug pause:
    user.vscode("workbench.action.debug.pause")
debug stopper:
    user.vscode("workbench.action.debug.stop")
debug continue:
    user.vscode("workbench.action.debug.continue")
debug restart:
    user.vscode("workbench.action.debug.restart")

# Terminal
external term:
    user.vscode("workbench.action.terminal.openNativeConsole")
term new:
    user.vscode("workbench.action.terminal.new")
term next:
    user.vscode("workbench.action.terminal.focusNextPane")
term last:
    user.vscode("workbench.action.terminal.focusPreviousPane")
term split:
    user.vscode("workbench.action.terminal.split")

# Folding
fold that:
    user.vscode("editor.fold")
unfold that:
    user.vscode("editor.unfold")
fold those:
    user.vscode("editor.foldAllMarkerRegions")
unfold those:
    user.vscode("editor.unfoldRecursively")
fold all:
    user.vscode("editor.foldAll")
unfold all:
    user.vscode("editor.unfoldAll")
fold comments:
    user.vscode("editor.foldAllBlockComments")

# Git
git branch:
    user.vscode("git.branchFrom")
git branch this:
    user.vscode("git.branch")
git checkout:
    user.vscode("git.checkout")
git commit:
    user.vscode("git.commitStaged")
git commit undo:
    user.vscode("git.undoCommit")
git commit ammend:
    user.vscode("git.commitStagedAmend")
git diff:
    user.vscode("git.openChange")
git ignore:
    user.vscode("git.ignore")
git merge:
    user.vscode("git.merge")
git output:
    user.vscode("git.showOutput")
git pull:
    user.vscode("git.pullRebase")
git push:
    user.vscode("git.push")
git push focus:
    user.vscode("git.pushForce")
git rebase abort:
    user.vscode("git.rebaseAbort")
git reveal:
    user.vscode("git.revealInExplorer")
git revert:
    user.vscode("git.revertChange")
git stash:
    user.vscode("git.stash")
git stash pop:
    user.vscode("git.stashPop")
git stage:
    user.vscode("git.stage")
git stage all:
    user.vscode("git.stageAll")
git unstage:
    user.vscode("git.unstage")
git unstage all:
    user.vscode("git.unstageAll")

# Git Lens (eamodio.gitlens)
git commit search:
    user.vscode("gitlens.showCommitSearch")
git commit details:
    user.vscode("gitlens.showQuickCommitFileDetails")
git branch history:
    user.vscode("gitlens.showQuickRepoHistory")
git file history:
    user.vscode("gitlens.showQuickFileHistory")
git status:
    user.vscode("gitlens.showQuickRepoStatus")
git blame show:
    user.vscode("gitlens.toggleFileBlame")
git blame switch:
    user.vscode("gitlens.toggleLineBlame")
git lens switch:
    user.show("gitlens.toggleCodeLens")
git zen switch:
    user.vscode("gitlens.toggleZenMode")
git review switch:
    user.vscode("gitlens.toggleReviewMode")